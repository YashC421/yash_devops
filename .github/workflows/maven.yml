# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

 name: Java CI with Maven
 permissions:
  id-token: write
  contents: read
 
 on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
 
 
 env:
  AZURE_CONTAINER_REGISTRY: "javaproject"
  CONTAINER_NAME: "project"
  RESOURCE_GROUP: "NetworkWatcherRG"
  CLUSTER_NAME: "test-cluster"
  MANIFEST_PATH: "/deployement.yml"

 
 
 jobs:
 
  build:
 
    runs-on: ubuntu-latest
 
    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B package --file pom.xml
    - name: Upload WAR file
      uses: actions/upload-artifact@v4
      with:
        name: war-file 
        path: /home/runner/work/java-project/java-project/webapp/target/*.war
 
      # Logs in with your Azure credentials
    - name: Azure login
      uses: azure/login@v1.4.6
      with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
    - name: Build and push image to ACR 
      run: |
          az acr build --image ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.CONTAINER_NAME }}:${{ github.sha }} --registry ${{ env.AZURE_CONTAINER_REGISTRY }} -g ${{ env.RESOURCE_GROUP }} .
 
